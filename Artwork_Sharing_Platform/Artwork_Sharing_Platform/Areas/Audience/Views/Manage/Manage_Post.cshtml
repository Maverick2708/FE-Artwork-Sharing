@{
    Layout = "~/Views/Shared/defaultAuthor.cshtml";
}
<style>

    #comments {
        max-width: 600px;
        margin: 20px auto;
        font-family: 'Arial', sans-serif;
    }

    .comment {
        background-color: #f8f8f8;
        padding: 10px;
        margin: 10px 0;
        border-radius: 5px;
        position: relative;
    }

    .like {
        position: absolute;
        top: 5px;
        right: 5px;
        cursor: pointer;
        color: #e44d26; /* Màu sắc mặc định của trái tim */
    }

    color: black; /* Màu sắc khi số lượng thả tim là 0 */
    }

    .like:hover {
        color: #e44d26; /* Màu sắc khi hover (có thể giữ nguyên màu đỏ) */
    }

    .comment-input {
        width: 100%;
        padding: 10px;
        margin: 10px 0;
        border: 1px solid #ccc;
        border-radius: 5px;
        box-sizing: border-box;
    }

    .comment-btn {
        background-color: #4caf50;
        color: white;
        padding: 10px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

    .comment-input-container {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .comment-input {
        flex: 1;
        margin-right: 10px; /* Adjust the spacing between input and button as needed */
    }

    .comment-btn {
        flex-shrink: 0; /* Prevent button from shrinking */
    }
    /* Style cho hình avatar bo tròn */
    .avatar {
        border-radius: 50%;
        width: 20px; /* Điều chỉnh kích thước hình avatar */
        height: 20px;
        object-fit: cover; /* Hiển thị toàn bộ hình trong khung */
        margin-right: 20px; /* Khoảng cách giữa avatar và văn bản */
    }

    /* Style cho ô chữ nhật dài chứa avatar và văn bản */
    .profile-card {
        display: flex;
        align-items: center;
        padding: 20px;
        border: 1px solid #ccc; /* Viền ô chữ nhật */
        margin-bottom: 20px; /* Khoảng cách giữa các ô chữ nhật */
        border-radius: 10px;
    }

    /* Style cho phần văn bản */
    .text-section {
        flex: 1; /* Đảm bảo phần văn bản mở rộng để chiếm hết không gian còn trống */
    }

    /* Reset margin và padding cho body */
    body {
        margin: 0;
        padding: 0;
    }

    .card {
        margin-bottom: 1px; /* Điều chỉnh giảm khoảng cách giữa các section */
    }
    .comment-date {
        margin-top: 10px; /* Khoảng cách giữa comment và ngày */
        color: #888; /* Màu chữ xám mờ */
        font-size: 14px; /* Kích thước chữ */
        text-align: right; /* Căn phải */
    }
    .comment-content {
        margin-bottom: 10px; /* Khoảng cách giữa comment và ngày */
    }
    .rectangle-container {
        text-align: center;
        margin-top: 20px;
    }

    .rectangle {
        display: inline-block;
        background-color: #4caf50; /* Your desired background color */
        color: white;
        padding: 5px 20px;
        border-radius: 5px;
    }

    .comments-text {
        font-size: 18px; /* Your desired font size */
        font-weight: bold;
    }
    .popup {
  position: relative;
  display: inline-block;
  cursor: pointer;
    }

/* The actual popup (appears on top) */
.popup .popuptext {
  visibility: hidden;
  width: 160px;
  background-color: #555;
  color: #fff;
  text-align: center;
  border-radius: 6px;
  padding: 8px 0;
  position: absolute;
  z-index: 1;
  bottom: 125%;
  left: 50%;
  margin-left: -80px;
}

/* Popup arrow */
.popup .popuptext::after {
  content: "";
  position: absolute;
  top: 100%;
  left: 50%;
  margin-left: -5px;
  border-width: 5px;
  border-style: solid;
  border-color: #555 transparent transparent transparent;
}

/* Toggle this class when clicking on the popup container (hide and show the popup) */
.popup .show {
  visibility: visible;
  -webkit-animation: fadeIn 1s;
  animation: fadeIn 1s
}

/* Add animation (fade in the popup) */
  
</style>

<section class="bg-gray200 pt-5 pb-5">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-7">
                <article class="card">

                    <img id="artworkImage" class="card-img-top mb-2" src="" alt="Card image">
                    <div class="card-body">
                        <h1 id="artworkTitle">
                        </h1>
                        <h4 id="artDescription">
                        </h4>
                        <h6 id="artworkPrice">

                        </h6>
                        <input type="hidden" id="artPirce"/>

                        <div id="ratingContainer" class="d-flex align-items-center">
                            <div id="starRatingContainer"></div>
                            <span id="likeCount" class="ml-2" onclick="addLike()"><i id="heartIcon" class="fa fa-heart text-danger"></i> <span id="likeCountValue">0</span></span>
                        </div>
                        <!-- Begin Comments -replace demowebsite with your own id
                        <!-- Bình luận -->
                        <div id="comments" class="mt-4">
                            <!-- Hiển thị danh sách bình luận từ cơ sở dữ liệu -->
                        </div>
                        <div class="comment-input-container">
                            <input type="text" id="commentInput" class="comment-input" placeholder="Enter your comment">
                            <button type="button" class="comment-btn" onclick="addComment()">Send</button>
                            <button type="button" class="comment-btn popup" onclick="addCart()">Add to card
                                <span class="popuptext" id="myPopup">Add to cart done!</span>
                            </button>
                        </div>
                        <span id="datePost" style="color: grey;"></span>
                        <script>
                            function addCart() {
                                var priceArt = document.getElementById('artPirce').value;
                                var ArtImg = document.getElementById('artworkImage').src.replace(/^data:image\/\w+;base64,/, '');
                                

                                // Get userId and artworkPId from session
                                var userId = sessionStorage.getItem('userId');
                                var artworkPId = sessionStorage.getItem('artworkID');

                                // Create a comment object with necessary values
                                var art = {
                                    artworkPId: artworkPId,
                                    userId: userId,
                                    quanity: 1,
                                    priceArtwork: priceArt,
                                    pictureArtwork: ArtImg
                                };
                                console.log(art);
                                // Call the function to send the comment to the server
                                addToCart(art);
                            }
                            function myFunction() {
                                var popup = document.getElementById("myPopup");
                                popup.classList.toggle("show");
                            }

                            function addToCart(obj) {
                                $.ajax({
                                    type: 'POST',
                                    url: 'https://localhost:7008/api/ShoppingCart', // Replace with your actual API endpoint
                                    contentType: 'application/json',
                                    data: JSON.stringify(obj),
                                    success: function (response) {
                                        // Handle the success response
                                        console.log('Added Cart successfully:', response);
                                        //myFunction();
                                     
                                        // If needed, update the UI to display the new comment immediately
                                        // You can call a function to refresh the comments or append the new comment to the existing ones
                                        
                                    },
                                    error: function (error) {
                                        // Handle the error response
                                        console.error('Error Cart:', error);
                                    }
                                });
                            }
                            var starRating = 5; // Replace with the actual database value
                            var likeCountValue = 0;

                          // Trạng thái ban đầu là chưa thả tim
                            var likeCountValue = 0;
                            // Function to generate the star rating
                            function generateStarRating() {
                                starRatingContainer.innerHTML = ''; // Clear previous content

                                // Create a star for each rating
                                for (var i = 0; i < starRating; i++) {
                                    var star = document.createElement('i');
                                    star.className = 'fa fa-star text-warning'; // Assuming FontAwesome for stars
                                    starRatingContainer.appendChild(star);
                                }

                                // You can add half stars or empty stars based on your requirements
                            }
                            function getAverageStarRating() {
                                var artworkId = getParameterByName('artworkid');
                                $.ajax({
                                    type: 'GET',
                                    url: `https://localhost:7008/api/RateStar/GetAverageRateStar?artworkID=${artworkId}`,
                                    success: function (data) {
                                        starRating = data.dataObject;
                                        generateStarRating();
                                    },
                                    error: function (error) {
                                        console.error('Lỗi:', error);
                                    }
                                });
                            }
                            $(document).ready(function () {
                                getAverageStarRating();

                            });
                            function getParameterByName(name, url) {
                                if (!url) url = window.location.href;
                                name = name.replace(/[[]]/g, "\$&");
                                var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
                                    results = regex.exec(url);
                                if (!results) return null;
                                if (!results[2]) return '';
                                return decodeURIComponent(results[2].replace(/\+/g, ' '));
                            }
                            var isLiked = false; // Trạng thái ban đầu là chưa thả tim
                            var likeCountValue = 0;

                            $(document).ready(function () {
                                loadLikeStatus();
                                loadLikeCount();
                            });

                            function loadLikeStatus() {
                                // Lấy artworkId từ session hoặc từ nơi bạn lưu trữ
                                var artworkId = getParameterByName('artworkid');

                                // Lấy userId từ sessionStorage
                                var userId = sessionStorage.getItem('userId');

                                // Gọi API để kiểm tra trạng thái like của người dùng
                                $.ajax({
                                    type: 'GET',
                                    url: `https://localhost:7008/api/Comment/GetUseLikerOrNotLike?userId=${userId}&artworkId=${artworkId}`,
                                    success: function (response) {
                                        if (response.status === "Success") {
                                            // Cập nhật trạng thái isLiked dựa trên dữ liệu từ API
                                            isLiked = response.dataObject.likeOrNotLike;

                                            // Cập nhật trạng thái trái tim (đỏ hoặc đen)
                                            var heartIcon = document.getElementById('heartIcon');
                                            heartIcon.classList.toggle('text-danger', isLiked);
                                            console.log("like");
                                        }
                                        else if(response.status === "Error") {
                                    // Cập nhật trạng thái isLiked dựa trên dữ liệu từ API
                                        isLiked = response.dataObject.likeOrNotLike;

                                    // Cập nhật trạng thái trái tim (đỏ hoặc đen)
                                        var heartIcon = document.getElementById('heartIcon');
                                            heartIcon.classList.toggle('', isLiked);
                                            console.log("Unlike");
                                    }
                                     else {
                                            console.error('Lỗi khi kiểm tra trạng thái like:', response.message);
                                    }
                                    },
                                    
                                });
                            }

                            function loadLikeCount() {
                                // Lấy artworkId từ session hoặc từ nơi bạn lưu trữ
                                var artworkId = getParameterByName('artworkid');

                                // Gọi API để lấy số lượng thả tim
                                $.ajax({
                                    type: 'GET',
                                    url: `https://localhost:7008/api/Comment/CountInteractByArtworkId?artworkId=${artworkId}`,
                                    success: function (data) {
                                        // Cập nhật giá trị count từ dữ liệu trả về
                                        likeCountValue = data.dataObject;

                                        // Cập nhật số lượng người thả tim
                                        document.getElementById('likeCountValue').innerText = likeCountValue;
                                    },
                                    error: function (error) {
                                        console.error('Lỗi khi gọi API:', error);
                                    }
                                });
                            }

                            function addLike() {
                                var heartIcon = document.getElementById('heartIcon');

                                // Thực hiện thay đổi trạng thái thả tim
                                if (isLiked) {
                                    // Nếu đã thả tim, giảm số lượng người thả tim
                                    likeCountValue--;
                                } else {
                                    // Nếu chưa thả tim, tăng số lượng người thả tim
                                    likeCountValue++;
                                }

                                // Cập nhật số lượng người thả tim
                                document.getElementById('likeCountValue').innerText = likeCountValue;

                                // Thay đổi trạng thái trái tim (đỏ hoặc đen)
                                heartIcon.classList.toggle('text-danger', isLiked);

                                // Cập nhật trạng thái isLiked
                                isLiked = !isLiked;

                                // Bạn cũng có thể gửi yêu cầu lên máy chủ để cập nhật số lượng thả tim trong cơ sở dữ liệu
                            }
                            

                            // Function to get URL parameter by name
                            function getParameterByName(name, url = window.location.href) {
                                name = name.replace(/[\[\]]/g, '\\$&');
                                const regex = new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`);
                                const results = regex.exec(url);
                                if (!results) return null;
                                if (!results[2]) return '';
                                return decodeURIComponent(results[2].replace(/\+/g, ' '));
                            }
                            // Call the function to generate the star rating
                            generateStarRating();


                            $(document).ready(function () {
                                // Lấy thông tin artworkId từ URL
                                var artworkId = getParameterByName('artworkid');

                                // Kiểm tra xem artworkId có tồn tại không
                                if (artworkId) {
                                    // Gọi API GetArtworkById với artworkId
                                    $.ajax({
                                        type: 'GET',
                                        url: `https://localhost:7008/api/Arwork/GetArtworkById?artworkid=${artworkId}`,
                                        success: function (response) {
                                            // Hiển thị dữ liệu từ API lên trang
                                            displayArtworkData(response.dataObject);
                                        },
                                        error: function (error) {
                                            console.error('Lỗi:', error);
                                        }
                                    });
                                }


                                // Hàm để hiển thị dữ liệu từ API lên trang
                                function displayArtworkData(data) {
                                    // Thực hiện các thay đổi cần thiết để hiển thị dữ liệu
                                    document.getElementById('artworkTitle').innerText = data.contentArtwork;
                                    // Thêm các thông tin khác tùy thuộc vào cấu trúc dữ liệu của API
                                    document.getElementById('artworkImage').src = 'data:image/jpeg;base64,' + data.pictureArtwork;
                                    document.getElementById('artworkPrice').innerText = (data.priceArtwork).toLocaleString('vi-VN') + 'VNĐ'; 
                                    document.getElementById('artPirce').value = (data.priceArtwork);
                                    var datePost = new Date(data.datePost);
                                    var formattedDate = ('0' + datePost.getDate()).slice(-2) + '-' + ('0' + (datePost.getMonth() + 1)).slice(-2) + '-' + datePost.getFullYear();
                                    document.getElementById('datePost').innerText = formattedDate;
                                    document.getElementById('artDescription').innerText = data.description;

                                }


                                // Hàm để lấy giá trị của tham số từ URL
                                function getParameterByName(name, url) {
                                    if (!url) url = window.location.href;
                                    name = name.replace(/[[]]/g, "\$&");
                                    var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
                                        results = regex.exec(url);
                                    if (!results) return null;
                                    if (!results[2]) return '';
                                    return decodeURIComponent(results[2].replace(/\+/g, ' '));
                                }
                            });
                            function addComment() {
                                var commentInput = document.getElementById('commentInput').value;

                                // Check if the comment input is not empty
                              

                                // Get userId and artworkPId from session
                                var userId = sessionStorage.getItem('userId');
                                var artworkPId = sessionStorage.getItem('artworkID');

                                // Create a comment object with necessary values
                                var commentData = {
                                    contentComment: commentInput,
                                    userId: userId,
                                    artworkPId: artworkPId
                                };
                                
                                // Call the function to send the comment to the server
                                postComment(commentData);
                            }

                            // Function to send a comment to the server
                            function postComment(commentData) {
                                $.ajax({
                                    type: 'POST',
                                    url: 'https://localhost:7008/api/Comment/CreateComment', // Replace with your actual API endpoint
                                    contentType: 'application/json',
                                    data: JSON.stringify(commentData),
                                    success: function (response) {
                                        // Handle the success response
                                        console.log('Comment added successfully:', response);

                                        // If needed, update the UI to display the new comment immediately
                                        // You can call a function to refresh the comments or append the new comment to the existing ones
                                        location.reload();
                                    },
                                    error: function (error) {
                                        // Handle the error response
                                        console.error('Error adding comment:', error);
                                    }
                                });
                            }


                        </script>

                    </div>
                </article>
            </div>
        </div>
    </div>
</section>

<!-- HTML structure -->
<section class="bg-gray200 pt-5 pb-5">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-7">
                <article class="card">
                    <div class="card-body">
                         <div id="apiDataContainer"></div>
                            <script>
                             $(document).ready(function () {
                                 var artworkId = sessionStorage.getItem("artworkID");
                                 $.ajax({
                                     type: 'GET',
                                     url: `https://localhost:7008/api/Comment/GetCommentForPost?artworkId=${artworkId}`,
                                     success: function (response) {
                                         console.log(response);
                                         if (response && response.status === "Success" && response.dataObject && response.dataObject.length > 0) {
                                             response.dataObject.forEach(function (comment) {
                                                 // Check if the element with ID 'apiDataContainer' exists
                                                 var apiDataContainer = $('#apiDataContainer');
                                                 if (apiDataContainer.length) {
                                                     apiDataContainer.append(`
                                                         <div class="profile-card">
                                                             <div class="text-section">
                                                                 <div>${comment.accountMail}</div>
                                                                  <div class="comment-content-date">
                                                                    <div class="comment-content">${comment.contentComment}</div>
                                                                    <div class="comment-date">${formatDate(comment.dateSub)}</div>
                                                                  </div>
                                                             </div>
                                                         </div>`
                                                     );
                                                 } else {
                                                     console.log('Element with ID "apiDataContainer" not found.');
                                                 }
                                             });
                                         }
                                         else {
                                             console.log("ERROR HTML")
                                         }
                                     },
                                     error: function (error) {
                                         console.error('Lỗi:', error);
                                     }
                                 });
                             });
                                function formatDate(dateString) {
                                    const options = { year: 'numeric', month: 'numeric', day: 'numeric' };
                                    const formattedDate = new Date(dateString).toLocaleDateString('vi-VN', options);
                                    return `<div class="comment-date">${formattedDate}</div>`;
                                }
                         </script>

                    </div>
                </article>
            </div>
        </div>
    </div>
</section>
