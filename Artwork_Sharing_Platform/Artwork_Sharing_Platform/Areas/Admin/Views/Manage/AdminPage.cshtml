
@{
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdminPage.cshtml";

}




<div id="page-wrapper">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12">
                <h1 class="page-header">Manage Platform</h1>
            </div>
            <!-- /.col-lg-12 -->
        </div>
        <!-- /.row -->
        <div class="row">
            <div class="col-lg-3 col-md-6">
                <div class="panel panel-primary">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-xs-3">
                                <i class="fa fa-comments fa-5x"></i>
                            </div>
                            <div class="col-xs-9 text-right">
                                <div id="count-request" class="huge">0</div>
                                <div>Request</div>
                            </div>
                        </div>
                    </div>
                    <a href="RequestPage">
                        <div class="panel-footer">
                            <span class="pull-left">View Details</span>
                            <span class="pull-right"><i class="fa fa-arrow-circle-right"></i></span>

                            <div class="clearfix"></div>
                        </div>
                    </a>
                </div>
            </div>
            <div class="col-lg-3 col-md-6">
                <div class="panel panel-green">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-xs-3">
                                <i class="fa fa-tasks fa-5x"></i>
                            </div>
                            <div class="col-xs-9 text-right">
                                <div id="count-artwork" class="huge">12</div>
                                <div>Artwork</div>
                            </div>
                        </div>
                    </div>
                    <a href="ArtWorkPage">
                        <div class="panel-footer">
                            <span class="pull-left">View Details</span>
                            <span class="pull-right"><i class="fa fa-arrow-circle-right"></i></span>

                            <div class="clearfix"></div>
                        </div>
                    </a>
                </div>
            </div>
            <div class="col-lg-3 col-md-6">
                <div class="panel panel-yellow">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-xs-3">
                                <i class="fa fa-shopping-cart fa-5x"></i>
                            </div>
                            <div class="col-xs-9 text-right">
                                <div id="count-order" class="huge">124</div>
                                <div>Orders</div>
                            </div>
                        </div>
                    </div>
                    <a href="OrderPage">
                        <div class="panel-footer">
                            <span class="pull-left">View Details</span>
                            <span class="pull-right"><i class="fa fa-arrow-circle-right"></i></span>

                            <div class="clearfix"></div>
                        </div>
                    </a>
                </div>
            </div>
            <div class="col-lg-3 col-md-6">
                <div class="panel panel-red">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-xs-3">
                                <i class="fa fa-support fa-5x"></i>
                            </div>
                            <div class="col-xs-9 text-right">
                                <div id="count-user" class="huge">13</div>
                                <div>Users</div>
                            </div>
                        </div>
                    </div>
                    <a href="UserPage">
                        <div class="panel-footer">
                            <span class="pull-left">View Details</span>
                            <span class="pull-right"><i class="fa fa-arrow-circle-right"></i></span>

                            <div class="clearfix"></div>
                        </div>
                    </a>
                </div>
            </div>
        </div>
        <!-- /.row -->
        <div class="row">
            <div class="col-lg-12">
                
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <i class="fa fa-bar-chart-o fa-fw"></i> Bar Chart 
                        <div class="pull-right">
                            @*<div class="btn-group">
                                <button type="button" class="btn btn-default btn-xs dropdown-toggle"
                                        data-toggle="dropdown">
                                    Actions
                                    <span class="caret"></span>
                                </button>
                                <ul class="dropdown-menu pull-right" role="menu">
                                    <li>
                                        <a href="#">Action</a>
                                    </li>
                                    <li>
                                        <a href="#">Another action</a>
                                    </li>
                                    <li>
                                        <a href="#">Something else here</a>
                                    </li>
                                    <li class="divider"></li>
                                    <li>
                                        <a href="#">Separated link</a>
                                    </li>
                                </ul>
                            </div>*@
                        </div>
                    </div>
                    <!-- /.panel-heading -->
                    <div class="panel-body">
                        <div class="row">
                           
                            <div class="col-lg-6">
                                <div id="morris-bar-chart-artwork"></div>
                            </div>
                            <div class="col-lg-6">
                                <div id="morris-bar-chart-user"></div>
                            </div>
                            <!-- /.col-lg-8 (nested) -->
                        </div>
                        <!-- /.row -->
                    </div>
                    <!-- /.panel-body -->
                </div>
                <!-- /.panel -->

            </div>
            
        </div>
        <!-- /.row -->
    </div>
    <!-- /.container-fluid -->
</div>
<!-- /#page-wrapper -->
<script>
    
    document.addEventListener('DOMContentLoaded', () => {
       
        countUser();
        
    });
    document.addEventListener('DOMContentLoaded', () => {
       
        countArtworks();
        
    });
    document.addEventListener('DOMContentLoaded', () => {
        
        countOrder();
    });
    document.addEventListener('DOMContentLoaded', () => {
        countRequests();

    });
    async function countRequests() {
        const apiUrl = 'https://localhost:7008/api/Request/CountRequest'; // Replace with your API base URL

        try {
            const response = await fetch(apiUrl, { method: 'GET' });

            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }

            const data = await response.json();

            if (data.status === 'Success') {
                displayCountRequests(data.dataObject);
            } else {
                console.error(data.message);
            }
        } catch (error) {
            console.error('There has been a problem with your fetch operation:', error.message);
        }
    }
    function displayCountRequests(count) {
        const countElement = document.getElementById('count-request');
        if (countElement) {
            countElement.textContent = count;
        } else {
            console.error('.huge element not found');
        }
    }

    async function countUser() {
        const apiUrl = 'https://localhost:7008/api/Person/GetAllAccountByAdmin'; // Replace with your API base URL

        try {
            const response = await fetch(apiUrl, { method: 'GET' });

            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }

            const data = await response.json();

            if (data.status === 'Success') {
                displayCountUser(data.dataObject.length);
            } else {
                console.error(data.message);

            }
        } catch (error) {
            console.error('There has been a problem with your fetch operation:', error.message);
        }
    }
    function displayCountUser(count) {
        const countElement = document.getElementById('count-user');
        if (countElement) {
            countElement.textContent = count;
        } else {
            console.error('.huge element not found');
        }
    }

    async function countArtworks() {
        const apiUrl = 'https://localhost:7008/api/Arwork/GetAllArtwork'; // Replace with your API base URL

        try {
            const response = await fetch(apiUrl, { method: 'GET' });

            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }

            const data = await response.json();
            console.log(data.length);
            
                displayCountArtwork(data.length);
            
        } catch (error) {
            console.error('There has been a problem with your fetch operation:', error.message);
        }
    }
    function displayCountArtwork(count) {
        const countElement = document.getElementById('count-artwork');
        if (countElement) {
            countElement.textContent = count;
        } else {
            console.error('.huge element not found');
        }
    }

    async function countOrder() {
        const apiUrl = 'https://localhost:7008/api/Order/GetAllOrder'; // Replace with your API base URL

        try {
            const response = await fetch(apiUrl, { method: 'GET' });

            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }

            const data = await response.json();

            if (data.status === 'Success') {
                displayCountOrder(data.dataObject.length);
            } else {
                console.error(data.message);
            }
        } catch (error) {
            console.error('There has been a problem with your fetch operation:', error.message);
        }
    }
    function displayCountOrder(count) {
        const countElement = document.getElementById('count-order');
        if (countElement) {
            countElement.textContent = count;
        } else {
            console.error('.huge element not found');
        }
    }
    

    async function fetchDataArtwork(year, month) {
        const response = await fetch(`https://localhost:7008/api/Arwork/GetAllPostCreateInMonth?year=${year}&month=${month}`);
        const data = await response.json();
        return data.dataObject;
    }

    async function createChartDataArtwork() {
        const currentDate = new Date();
        const currentYear = currentDate.getFullYear();
        const currentMonth = currentDate.getMonth();

        const startDate = new Date(currentYear, currentMonth - 4, 1);
        const endDate = new Date(currentYear, currentMonth, 0);

        const chartData = [];
        for (let date = startDate; date <= endDate; date.setMonth(date.getMonth() + 1)) {
            const month = date.toLocaleString('default', { month: 'long' });
            const year = date.getFullYear();
            const value = await fetchDataArtwork(year, date.getMonth() + 1);
            chartData.push({ x: `${year}-${month}`, value });
        }

        return chartData;
    }

    createChartDataArtwork().then(chartData => {
        Morris.Bar({
            element: 'morris-bar-chart-artwork',
            data: chartData,
            xkey: ['x'],
            ykeys: ['value'],
            labels: ['Number of Artworks'],
            barRatio: 0.4,
            xLabelAngle: 35,
            hideHover: 'auto',
        }).on('click', function (i, row) {
            console.log(i, row);
        });
    }).catch(error => {
        console.error('Error fetching data:', error);
    });

    async function fetchDataUser(year, month) {
        const response = await fetch(`https://localhost:7008/api/Person/GetAllAccountCreateInMonth?year=${year}&month=${month}`);
        const data = await response.json();
        return data.dataObject;
    }

    async function createChartDataUser() {
        const currentDate = new Date();
        const currentYear = currentDate.getFullYear();
        const currentMonth = currentDate.getMonth();

        const startDate = new Date(currentYear, currentMonth - 4, 1);
        const endDate = new Date(currentYear, currentMonth, 0);

        const chartData = [];
        for (let date = startDate; date <= endDate; date.setMonth(date.getMonth() + 1)) {
            const month = date.toLocaleString('default', { month: 'long' });
            const year = date.getFullYear();
            const value = await fetchDataUser(year, date.getMonth() + 1);
            chartData.push({ x: `${year}-${month}`, value });
        }

        return chartData;
    }

    createChartDataUser().then(chartData => {
        Morris.Bar({
            element: 'morris-bar-chart-user',
            data: chartData,
            xkey: ['x'],
            ykeys: ['value'],
            labels: ['Number of Users'],
            barRatio: 0.4,
            xLabelAngle: 35,
            hideHover: 'auto',
        });
    });
</script>






