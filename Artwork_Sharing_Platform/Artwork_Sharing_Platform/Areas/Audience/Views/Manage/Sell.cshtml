@{
    Layout = "~/Views/Shared/defaultAuthor.cshtml";
}
<!doctype html>
<html lang="en">

<head>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Home - Pintereso Bootstrap Template</title>
    <script type="text/javascript">(function () { var css = document.createElement('link'); css.href = 'https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css'; css.rel = 'stylesheet'; css.type = 'text/css'; document.getElementsByTagName('head')[0].appendChild(css); })();</script>
    <link href="~/Assets/template-pintereso-bootstrap-html-master/docs/assets/css/app.css" rel="stylesheet" />
    <link href="~/Assets/template-pintereso-bootstrap-html-master/docs/assets/css/theme.css" rel="stylesheet" />
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.2/css/all.min.css">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css">

    <!-- Link đến Font Awesome CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

    <!-- Link đến jQuery -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>

    <!-- Link đến Bootstrap JavaScript và các plugin cần thiết -->
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js"></script>

    <style>
        .popup-container-order {
            display: none; /* Ẩn popup ban đầu */
            position: fixed; /* Phân cấp vị trí cố định */
            z-index: 1; /* Hiển thị popup trên cùng */
            left: 0;
            top: 0;
            width: 100%; /* Full width */
            height: 100%; /* Full height */
            overflow: auto; /* Kích hoạt cuộn nếu cần */
            background-color: rgba(0, 0, 0, 0.5); /* Màu nền */
        }

        .popup-order {
            background-color: #fefefe;
            margin: 15% auto; /* Căn giữa trên và dưới, căn lề trái và phải tự động */
            padding: 20px;
            border: 1px solid #888;
            width: 80%; /* Chiều rộng */
        }

        .popup-content-order {
            text-align: center;
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

            .close:hover,
            .close:focus {
                color: black;
                text-decoration: none;
                cursor: pointer;
            }
        body {
            margin-top: 20px;
            background: #f8f8f8
        }

        .nav-link {
            color: black;
        }
        .profile {
            position: relative;
            display: inline-block;
            margin-left: 50px;
        }

        .avatar-container {
            width: 128px;
            position: relative;
        }

        .avatar {
            width: 100%;
            height: 128px;
            object-fit: cover; /*để hình ảnh tự động điều chỉnh kích thước và giữ nguyên tỉ lệ */
        }

        #circleButton {
            position: absolute;
            bottom: 40px;
            right: 0px;
            width: 30px;
            height: 30px;
            background-color: dimgray;
            border: none;
            cursor: pointer;
        }

        .jumbotron {
            position: relative;
        }

        .update-background-button {
            position: absolute;
            bottom: 20px;
            right: 30px;
            padding: 10px 10px;
            background-color: #ffffff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .update-profile-button {
            position: absolute;
            bottom: -60px;
            right: 30px;
            padding: 10px 10px;
            background-color: dimgray;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .req-profile-button {
            position: absolute;
            bottom: -110px;
            right: 30px;
            padding: 10px 10px;
            background-color: #2152E0;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .reqed-profile-button {
            position: absolute;
            bottom: -110px;
            right: 30px;
            padding: 10px 10px;
            background-color: #FFF000;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .conf-profile-button {
            position: absolute;
            bottom: -110px;
            right: 30px;
            padding: 10px 10px;
            background-color: #33F100;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .n-req-profile-button {
            position: absolute;
            bottom: -110px;
            right: 30px;
            padding: 10px 10px;
            background-color: #F16300;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .n-req-profile-button {
            position: absolute;
            bottom: -150px;
            right: 30px;
            padding: 10px 10px;
            background-color: #F16300;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }



        .update-profile-button:hover, .update-background-button:hover {
            background-color: #A0A0A0;
        }


        .custom-link {
            color: #7d7e7f; /* Màu chữ mặc định */
            font-weight: 500;
        }

        .custom-link:hover {
            padding: 3px 15px;
            border-radius: 5px;
            color: #343A40;
            background-color: #dbdbdb; /* Màu nền khi di chuột vào */
            text-decoration: none; /* Xóa gạch chân */
            /*transition: background-color 0.3s;*/ /* Áp dụng hiệu ứng chuyển đổi màu nền */
        }
            
    </style>
    <title>ARS</title>
</head>

<body>
    <div style="display: flex; justify-content: center; align-items:center;">
        <div class="col-md-10">
            <div class="jumbotron border-round-0 min-50vh" id="backgroundProfile" style="background-image: url(); border-bottom-left-radius: 15px; border-bottom-right-radius: 15px;">
                <button class="update-background-button" id="update-background" onclick="UpdateBackgroundPopUp()" style="display: flex; justify-content: space-between; align-items: center;">
                    <i class="fa-solid fa-camera" style="margin-right: 10px"></i>
                    <h4 style="font-size: 15px; margin: 0 auto;">Cập nhật ảnh bìa</h4>
                </button>
                <button class="update-profile-button" id="update-profile" onclick="openArtPopup()" style="display: flex; justify-content: space-between; align-items: center;">
                    <i class="fa-solid fa-pen" style="margin-right: 10px; color: white"></i>
                    <h4 style="color: white; font-size: 15px; margin: 0 auto;">Chỉnh sửa hồ sơ người dùng</h4>
                </button>
                <button class="req-profile-button" id="Request" onclick="RequestConfirm()" style="display: none; justify-content: space-between; align-items: center;">
                    <i class="fa-regular fa-circle-check" style="margin-right: 10px; color: white"></i>
                    <h4 style="color: white; font-size: 15px; margin: 0 auto;">Yêu cầu xác nhận</h4>
                </button>
                <button class="reqed-profile-button" id="Confirming" style="display: none; justify-content: space-between; align-items: center;">
                    <i class="fa-solid fa-circle-xmark" style="margin-right: 10px; color: white"></i>
                    <h4 style="color: black; font-size: 15px; margin: 0 auto;">Đợi xác nhận</h4>
                </button>
                <button class="conf-profile-button" id="Confirmed" style="display: none; justify-content: space-between; align-items: center;">
                    <i class="fa-solid fa-circle-check" style="margin-right: 10px; color: white"></i>
                    <h4 style="color: white; font-size: 15px; margin: 0 auto;">Đã xác nhận</h4>
                </button>
                <button class="n-req-profile-button" id="NoCofirm" style="display: none; justify-content: space-between; align-items: center;">
                    <i class="fa-regular fa-circle-check" style="margin-right: 10px; color: white"></i>
                    <h4 style="color: white; font-size: 15px; margin: 0 auto;">Bạn cần 10 follower để gửi yêu cầu xác nhận tài khoản</h4>
                </button>
            </div>

            <div class="profile mb-4" style="">
                <div class="avatar-container">
                    <img id="avatarProfile" src="" class="avatar mt-neg100 mb-4 rounded-circle">
                    <button class="update-avatar-button" id="circleButton" onclick="changeAvatarPopup()">
                        <i class="fa-solid fa-camera"></i>
                    </button>
                </div>

                <div style="display: flex; justify-content: space-between;">
                    <div class="left-child" style="display: flex; align-items: center;">
                        <h2 id="userNameProfile" class="font-weight-bold title"></h2>
                        <img id="blueTick" src="https://cdn-icons-png.flaticon.com/512/1828/1828640.png" width="24" style="display:none; margin-left: 10px;"/>
                    </div>
                    <div class="right-child">

                    </div>
                </div>

                <div style="display: flex;">
                    <h7 class="your-art" id="followNumber"></h7>
                    <h7 style="margin-left: 5px">followers</h7>
                </div>

                <div style="display: flex; align-content: center; margin-top: 10px">
                    <h4 class="" style="">
                        <a class="custom-link" href="~/Audience/Manage/Profile" style="">Art</a>
                    </h4>
                    <h4 class="your-art" style="margin: 0 15px">|</h4>
                    <h4 class="" style="">
                        <a class="custom-link" href="~/Audience/Manage/Order" style="">Order</a>
                    </h4>
                    <h4 class="your-art" style="margin: 0 15px">|</h4>
                    <div>
                        <h4 class="" style="font-weight: 700">Sell</h4>
                        <div style="background-color: black; height: 3px; border-radius: 5px;"></div>
                    </div>
                </div>

            </div>
        </div>
    </div>





    <div class="container">
        <div class="row flex-lg-nowrap">
            <div class="col">

                <div class="card">
                    <div class="card-body">
                        <div class="e-profile">
                            @*<ul class="nav">
                                    <li class="nav-item" id="orderTab">
                                        <span class="active nav-link" onclick="toggleTab('order')">Danh sách đơn hàng</span>
                                    </li>
                                    <li class="nav-item" id="salesTab">
                                        <span class="nav-link" onclick="toggleTab('sales')">Danh sách bán</span>
                                    </li>
                                </ul>*@

                            <div class="tab-content">
                                <div class="container">
                                    <table class="table table-borderless main">
                                        <thead>
                                            <tr class="head" style="text-align: center">
                                                <th scope="col">Mã đơn hàng</th>
                                                <th scope="col">Ngày đặt hàng</th>
                                                <th scope="col">Tổng tiền</th>
                                                <th scope="col">Mã tranh</th>
                                                <th scope="col">Thêm...</th>
                                                <th scope="col">Hình thức thanh toán</th>
                                            </tr>
                                        </thead>
                                        <tbody id="apiDataContainer" style="text-align: center">
                                            <!-- Dữ liệu sẽ được thêm vào đây -->
                                        </tbody>

                                    </table>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>
        $(document).ready(function () {
            var Userid = sessionStorage.getItem('userId');

            $.ajax({
                type: 'GET',
                url: `https://localhost:7008/api/Follow/CountFollow?userIdFollow=${Userid}`,
                success: function (response) {
                    // Hiển thị dữ liệu từ API lên trang

                    if (response.message == 'Follow found') {
                        document.getElementById('followNumber').innerText = response.dataObject;
                    }
                    else if (response.message == 'Follow not found') {
                        document.getElementById('followNumber').innerText = 0;
                    }
                },
                error: function (error) {
                    console.error('Lỗi:', error);
                }
            });
        });

        function RequestConfirm() {
            var Userid = sessionStorage.getItem('userId');
            $.ajax({
                type: 'POST',
                url: 'https://localhost:7008/api/Request/CreateRequest', // Replace with your actual API endpoint
                data: JSON.stringify({
                    userId: Userid


                }),
                contentType: 'application/json',
                success: function (data) {
                    // Handle success response from the API
                    alert('Đã gửi yêu cầu xác nhận');
                    // Optionally, close the modal after successful save
                    location.reload();


                },
                error: function (error) {
                    // Handle error response from the API
                    console.error('Lỗi khi gửi yêu cầu', error);
                }
            });
        }


        $(document).ready(function () {
            var Userid = sessionStorage.getItem('userId');
            var email = sessionStorage.getItem('userEmail');
            $.ajax({
                type: 'GET',
                url: `https://localhost:7008/api/Person/email?email=${email}`,
                success: function (response1) {
                    if (response1.isVerifiedPage === true) {
                        document.getElementById('Confirmed').style.display = "flex";
                        document.getElementById('blueTick').style.display = "flex";
                    }
                    else {
                        $.ajax({
                            type: 'GET',
                            url: `https://localhost:7008/api/Request/GetAllRequestByUserID?userID=${Userid}`,
                            success: function (response) {
                                // Hiển thị dữ liệu từ API lên trang

                                if (response.message == 'Found Request' && response.dataObject[response.dataObject.length - 1].status == true) {
                                    document.getElementById('Confirming').style.display = "flex";
                                }
                                else if (response.message == 'Found Request' && response.dataObject[response.dataObject.length - 1].status == false) {
                                    document.getElementById('Request').style.display = "flex";
                                }
                                else if (response.message == 'Request not found') {
                                    $.ajax({
                                        type: 'GET',
                                        url: `https://localhost:7008/api/Follow/CountFollow?userIdFollow=${Userid}`,
                                        success: function (response2) {
                                            // Hiển thị dữ liệu từ API lên trang

                                            if (response2.dataObject < 10 || response2.message == 'Follow not found') {
                                                document.getElementById('NoCofirm').style.display = "flex";
                                            }
                                            else if (response2.dataObject >= 10) {
                                                document.getElementById('Request').style.display = "flex";
                                            }
                                        },
                                        error: function (error) {
                                            console.error('Lỗi:', error);
                                        }
                                    });
                                }

                            },
                            error: function (error) {
                                console.error('Lỗi:', error);
                            }
                        });
                    }
                }
            });
        });
        function checkAvatarFileSelection() {
            const fileInput = document.getElementById('Avatar');
            const previewImage = document.getElementById('previewImage');
            const imageContainer = document.getElementById('imageContainer');

            // Kiểm tra xem người dùng đã chọn tệp ảnh hay không
            if (fileInput.files && fileInput.files[0]) {
                const reader = new FileReader();

                reader.onload = function (e) {
                    // Hiển thị ảnh xem trước
                    previewImage.style.display = 'block';
                    previewImage.src = e.target.result;

                    // Tính toán tỉ lệ ảnh và cập nhật kích thước của vùng chứa ảnh
                    const aspectRatio = previewImage.width / previewImage.height;
                    const containerWidth = imageContainer.offsetWidth;
                    const containerHeight = containerWidth / aspectRatio;
                    imageContainer.style.height = containerHeight + 'px';
                };

                // Đọc tệp ảnh dưới dạng URL dữ liệu
                reader.readAsDataURL(fileInput.files[0]);
            }
        }
        function checkBRFileSelection() {
            const fileInput = document.getElementById('Background');
            const previewImage = document.getElementById('previewImageBR');
            const imageContainer = document.getElementById('imageContainer');

            // Kiểm tra xem người dùng đã chọn tệp ảnh hay không
            if (fileInput.files && fileInput.files[0]) {
                const reader = new FileReader();

                reader.onload = function (e) {
                    // Hiển thị ảnh xem trước
                    previewImage.style.display = 'block';
                    previewImage.src = e.target.result;

                    // Tính toán tỉ lệ ảnh và cập nhật kích thước của vùng chứa ảnh
                    const aspectRatio = previewImage.width / previewImage.height;
                    const containerWidth = imageContainer.offsetWidth;
                    const containerHeight = containerWidth / aspectRatio;
                    imageContainer.style.height = containerHeight + 'px';
                };

                // Đọc tệp ảnh dưới dạng URL dữ liệu
                reader.readAsDataURL(fileInput.files[0]);
            }
        }
        function UpdateBackgroundPopUp() {

            // Create a Bootstrap modal for the popup
            var modal3 = `
                                     <div class="modal" id="artPopup" tabindex="-1" role="dialog">
                                         <div class="modal-dialogg" role="document" style="display: flex; align-item: center; justify-content: center">
                                             <div class="modal-content" style="width: 70%">
                                                 <div class="modal-header">
                                                     <h5 class="modal-title">Information</h5>
                                                     <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                         <span aria-hidden="true">&times;</span>
                                                     </button>
                                                 </div>
                                                 <div class="modal-body">
                                                         <label for="CurrentBackground">Background:</label>
                                                              <img src="" id="CurrentBackground" class="form-control mb-2" style="object-fit: cover; width: 200px; height: 200px;">
                                                            <label for="Background">Select Background:</label>
                                                           <input type="file" id="Background" accept="image/*,.png" class="form-control mb-2" onchange="checkBRFileSelection()">
                                                           <img id="previewImageBR" src="#" alt="Ảnh xem trước" style="display: none; max-width: 100%; max-height: 100%;">

                                                 </div>
                                                  <div class="modal-footer">
                                             <button type="button" class="btn btn-primary" onclick="EditBR()">Save</button>
                                             <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                         </div>
                                             </div>
                                         </div>
                                     </div>
                                 `;

            // Append the modal HTML to the body
            $('body').append(modal3);

            // Show the modal
            $('#artPopup').modal('show');

            // Remove the modal from the DOM when it's closed
            $('#artPopup').on('hidden.bs.modal', function () {
                $(this).remove();
            });
            var storedUserEmail = sessionStorage.getItem('userEmail');
            $.ajax({
                type: 'GET',
                url: `https://localhost:7008/api/Person/email?email=${storedUserEmail}`,
                success: function (response) {
                    // Hiển thị dữ liệu từ API lên trang
                    document.getElementById('CurrentBackground').src = 'data:image/jpeg;base64,' + response.backgroundImg;


                },
                error: function (error) {
                    console.error('Lỗi:', error);
                }
            });

        }
        function EditBR() {
            var userID = sessionStorage.getItem('userId');
            var fileInputBR = document.getElementById('Background');
            var selectedFile = fileInputBR.files[0];

            if (selectedFile) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    // Base64-encoded image data
                    var codePictureArtworkWithPrefix = e.target.result;

                    // Xóa tiền tố "data:image/jpeg;base64,"
                    var codePictureBR = codePictureArtworkWithPrefix.replace(/^data:image\/(png|jpeg);base64,/, '');


                    // Call the API using AJAX
                    $.ajax({
                        type: 'PUT',
                        url: `https://localhost:7008/api/Person/UpdateBackGround?userId=${userID}`, // Replace with your actual API endpoint
                        data: JSON.stringify({

                            backgroundImg: codePictureBR

                        }),
                        contentType: 'application/json',
                        success: function (data) {
                            // Handle success response from the API
                            alert("Change Background successfully!");

                            // Optionally, close the modal after successful save
                            location.reload();

                            $('#artPopup').modal('hide');
                        },
                        error: function (error) {
                            // Handle error response from the API
                            console.error('Error saving avatar:', error);
                        }
                    });
                };

                // Read the image file as a data URL
                reader.readAsDataURL(selectedFile);
            }
        }

        function changeAvatarPopup() {

            // Create a Bootstrap modal for the popup
            var modal2 = `
                                       <div class="modal" id="artPopup" tabindex="-1" role="dialog">
                                           <div class="modal-dialogg" role="document" style="display: flex; align-item: center; justify-content: center">
                                               <div class="modal-content" style="width: 70%">
                                                   <div class="modal-header">
                                                       <h5 class="modal-title">Information</h5>
                                                       <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                           <span aria-hidden="true">&times;</span>
                                                       </button>
                                                   </div>
                                                   <div class="modal-body">
                                                          <label for="CurrentAvatar">Avatar:</label>
                                                               <img src="" id="CurrentAvatar" class="form-control mb-2" style="width: 200px; height: 200px;">
                                                               <label for="Avatar">Select Image:</label>
                                                               <input type="file" id="Avatar" accept="image/*,.png" class="form-control mb-2" onchange="checkAvatarFileSelection()">
                                                                <img id="previewImage" src="#" alt="Ảnh xem trước" style="display: none; max-width: 100%; max-height: 100%;">


                                                   </div>
                                                    <div class="modal-footer">
                                               <button type="button" class="btn btn-primary" onclick="EditAvatar()">Save</button>
                                               <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                           </div>
                                               </div>
                                           </div>
                                       </div>
                                   `;

            // Append the modal HTML to the body
            $('body').append(modal2);

            // Show the modal
            $('#artPopup').modal('show');

            // Remove the modal from the DOM when it's closed
            $('#artPopup').on('hidden.bs.modal', function () {
                $(this).remove();
            });
            var storedUserEmail = sessionStorage.getItem('userEmail');
            $.ajax({
                type: 'GET',
                url: `https://localhost:7008/api/Person/email?email=${storedUserEmail}`,
                success: function (response) {
                    // Hiển thị dữ liệu từ API lên trang
                    document.getElementById('CurrentAvatar').src = 'data:image/jpeg;base64,' + response.avatar;


                },
                error: function (error) {
                    console.error('Lỗi:', error);
                }
            });

        }
        function EditAvatar() {
            var userID = sessionStorage.getItem('userId');
            var fileInputAvatar = document.getElementById('Avatar');
            var selectedFile = fileInputAvatar.files[0];

            if (selectedFile) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    // Base64-encoded image data
                    var codePictureArtworkWithPrefix = e.target.result;

                    // Xóa tiền tố "data:image/jpeg;base64,"
                    var codePictureAvatar = codePictureArtworkWithPrefix.replace(/^data:image\/(png|jpeg);base64,/, '');


                    // Call the API using AJAX
                    $.ajax({
                        type: 'PUT',
                        url: `https://localhost:7008/api/Person/UpdateAvatar?userId=${userID}`, // Replace with your actual API endpoint
                        data: JSON.stringify({

                            avatar: codePictureAvatar

                        }),
                        contentType: 'application/json',
                        success: function (data) {
                            // Handle success response from the API
                            alert("Change Avatar successfully!");

                            // Optionally, close the modal after successful save
                            location.reload();

                            $('#artPopup').modal('hide');
                        },
                        error: function (error) {
                            // Handle error response from the API
                            console.error('Error saving avatar:', error);
                        }
                    });
                };

                // Read the image file as a data URL
                reader.readAsDataURL(selectedFile);
            }
        }

        // Read the image file as a data URL



        function openArtPopup() {

            // Create a Bootstrap modal for the popup
            var modal = `
                                           <div class="modal" id="artPopup" tabindex="-1" role="dialog">
                                               <div class="modal-dialogg" role="document" style="display: flex; align-item: center; justify-content: center">
                                                   <div class="modal-content" style="width: 70%">
                                                       <div class="modal-header">
                                                           <h5 class="modal-title">Information</h5>
                                                           <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                               <span aria-hidden="true">&times;</span>
                                                           </button>
                                                       </div>
                                                       <div class="modal-body">
                                                           <div style="display: flex">
                                                               <label for="Fullname">Full name:</label>
                                                               <input type="text" id="Fullname" class="form-control mb-2">
                                                                <label>  </label>
                                                               <label for="Phone">Phone number:</label>
                                                               <input type="text" id="Phone" class="form-control mb-2">
                                                           </div>
                                                           <div style="display: flex">
                                                               <label for="Address">Address:</label>
                                                               <input type="text" id="Address" class="form-control mb-2">
                                                               <label for="Birth">Brith Day:</label>
                                                               <input type="date" id="Birth" class="form-control mb-2">
                                                           </div>



                                                       </div>
                                                        <div class="modal-footer">
                                                   <button type="button" class="btn btn-primary" onclick="Editinfo()">Save</button>
                                                   <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                               </div>
                                                   </div>
                                               </div>
                                           </div>
                                       `;

            // Append the modal HTML to the body
            $('body').append(modal);

            // Show the modal
            $('#artPopup').modal('show');

            // Remove the modal from the DOM when it's closed
            $('#artPopup').on('hidden.bs.modal', function () {
                $(this).remove();
            });
            var storedUserEmail = sessionStorage.getItem('userEmail');
            $.ajax({
                type: 'GET',
                url: `https://localhost:7008/api/Person/email?email=${storedUserEmail}`,
                success: function (response) {
                    // Hiển thị dữ liệu từ API lên trang
                    document.getElementById('Fullname').value = response.fullName;
                    document.getElementById('Phone').value = response.phoneNumber;
                    document.getElementById('Address').value = response.address;
                    document.getElementById('Birth').value = formatDateToDatePickerFormat(response.dob);


                },
                error: function (error) {
                    console.error('Lỗi:', error);
                }
            });

        }
        function Editinfo() {
            // Get values from input fields
            var Fullname = document.getElementById('Fullname').value;
            var Phone = document.getElementById('Phone').value;
            var Address = document.getElementById('Address').value;
            var Birth = $('#Birth').val();
            var userID = sessionStorage.getItem('userId');
            // Replace this with your actual logic to get user ID
            // Placeholder for base64-encoded image data, to be set later

            // Read and encode the selected image





            // Base64-encoded image data


            // Call the API using AJAX
            $.ajax({
                type: 'PUT',
                url: `https://localhost:7008/api/Person/UpdateAccount?userId=${userID}`, // Replace with your actual API endpoint
                data: JSON.stringify({
                    fullName: Fullname,
                    birthDate: Birth,
                    phoneNumber: Phone,
                    address: Address,


                }),
                contentType: 'application/json',
                success: function (data) {
                    // Handle success response from the API
                    alert("Update information successfully!");

                    // Optionally, close the modal after successful save
                    location.reload();

                    $('#artPopup').modal('hide');
                },
                error: function (error) {
                    // Handle error response from the API
                    console.error('Error saving info:', error);
                }
            });
        };

        // Read the image file as a data URL



        function formatDateToDatePickerFormat(inputDate) {
            const dateObject = new Date(inputDate);
            const year = dateObject.getFullYear();
            const month = (dateObject.getMonth() + 1).toString().padStart(2, '0');
            const day = dateObject.getDate().toString().padStart(2, '0');

            return `${year}-${month}-${day}`;
        }


        $(document).ready(function () {
            var storedUserEmail = sessionStorage.getItem('userEmail');
            console.log(storedUserEmail);
            console.log(sessionStorage.getItem('avatar'))
            $.ajax({
                type: 'GET',
                url: `https://localhost:7008/api/Person/email?email=${storedUserEmail}`,
                success: function (response) {
                    // Hiển thị dữ liệu từ API lên trang
                    displayUserData(response);
                    if (response.isVerifiedPage == true) {
                        $('.right-child').show();
                    }
                    else {
                        $('.right-child').hide();
                    }
                },
                error: function (error) {
                    console.error('Lỗi:', error);
                }
            });
        });

        function displayUserData(data) {
            document.getElementById('userNameProfile').innerText = data.fullName;
            document.getElementById('avatarProfile').src = 'data:image/jpeg;base64,' + data.avatar;
            document.getElementById('backgroundProfile').style.backgroundImage = 'url(data:image/jpeg;base64,' + data.backgroundImg + ')';
        }




        $(document).ready(function () {
            var userId = sessionStorage.getItem('userId');
            $.ajax({
                type: 'GET',
                url: `https://localhost:7008/api/Order/GetOrdersByUserIdRe?userid=${userId}`,
                success: function (response) {
                    if (response.status === "Success" && Array.isArray(response.dataObject) && response.dataObject.length > 0) {
                        response.dataObject.forEach(function (order) {
                            var artworksHtml = order.orderDetail.map(function (orderDetail) {
                                return `${orderDetail.artworkPId}`;
                            }).join(", ");

                            const strHTML = `
                        <tr class="rounded" style="background-color: white;">
                            <td class="item order-id">${order.orderID}</td>
                            <td class="item">${formatDate(order.orderDetail[0].dateOrder)}</td>
                            <td class="item">${formatPrice(order.totalBill)}</td>
                            <td class="item">${artworksHtml}</td>
                            <td class="item">
                                <a href="#" class="order-detail-link">Chi tiết</a>
                            </td>
                        </tr>
                    `;
                            $('#apiDataContainer').append(strHTML);
                        });

                        // Khi người dùng nhấp vào liên kết "Chi tiết"
                        $(document).on('click', '.order-detail-link', function (e) {
                            e.preventDefault();

                            var orderId = $(this).closest('tr').find('.item.order-id').text();
                            var order = response.dataObject.find(o => o.orderID == orderId);
                            showOrderDetails(order);
                        });
                    } else {
                        console.error('Invalid or empty response from the API.');
                    }
                },
                error: function (error) {
                    console.error('Error:', error);
                }
            });
        });

            //    function showOrderDetails(order) {
            //        var orderInfoHtml = `
            //    <h2>Đơn hàng ${order.billOrderId}</h2>
            //    <p>Ngày đặt hàng: ${order.dateOrder}</p>
            //    <p>Tổng hóa đơn: ${order.totalBill}</p>
            //    <p>Địa chỉ: ${order.address}</p>
            //    <p>Số điện thoại: ${order.phone}</p>
            //    <p>Người đặt hàng: ${order.fullname}</p>
            //`;

            //        var artworksHtml = order.artworks.map(function (artwork) {
            //            return `
            //        <div class="artwork-item" style="display: flex; align-items: center;">
            //            <img src="${artwork.imageUrl}" alt="Artwork Image" style="height: 100px; width: 100px; margin-right: 20px;">
            //            <div style="display: flex; flex-direction: column;">
            //                <p style="margin-bottom: 5px;">Số lượng: ${artwork.quanity}</p>
            //                <p style="margin-bottom: 5px; margin-left: auto;">Giá: ${artwork.priceOrder}</p>
            //            </div>
            //        </div>
            //    `;
            //        }).join("");

            //        $('#orderDetailContainer').html(orderInfoHtml + artworksHtml);
            //        $('#orderDetailPopup').show();
            //    }

            //    $(document).on('click', '.close', function () {
            //        $('#orderDetailPopup').hide();
            //    });


        function showOrderDetails(order) {
            var orderInfoHtml = `
        <div class="" style="display: flex; justify-content: center; align-items: center;">
            <div class="col-12 user_history" style="padding: 0.5% 0;">
                <div class="order-detail-header" style="background-color: #E65555; display: space-btween; padding-left: 5px; text-align: center;">
                    <h2 style="font-weight: bold; font-size: 2rem; padding-left: 1%; color: white;">Chi tiết đơn hàng</h2>
                    <span class="close">&times;</span>
                </div>
                <div style="display: flex; align-items: center; justify-content: center; padding: 0 1%;">
                    <div class="order-detail-body">
                        <div class="body-head" style="display: flex; align-items: center; justify-content: space-between;">
                            <h3 style="font-weight: bold; font-size: 1rem; margin: 5px 0;"><b>Mã đơn hàng: </b>${order.orderID}</h3>
                            <h3 style="font-weight: bold; font-size: 1rem; margin: 5px 0;"><b>Ngày đặt: </b>${formatDate(order.orderDetail[0].dateOrder)}</h3>
                        </div>
                        <div class="body-content" style="margin: 0 0 5px;">
                            <table class="table" style="text-align: center; border: none; border-collapse: collapse;">
                                <thead style="font-size: 1rem;">
                                    <tr>
                                        <th>
                                            <h4>Mã sản phẩm</h4>
                                        </th>
                                        <th>
                                            <h4>Ảnh</h4>
                                        </th>
                                        <th>
                                            <h4>Số lượng</h4>
                                        </th>
                                        <th>
                                            <h4>Giá</h4>
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    ${generateArtworksRows(order.orderDetail)}
                                    <tr>
                                        <td colspan="4" style="text-align: left; padding-left: 5px;">
                                            <b>Tổng tiền: </b>
                                        </td>
                                        <td>
                                            ${formatPrice(order.totalBill)}
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        <div class="user-infor">
                            <h3 style="font-weight: bold; font-size: 1rem; margin: 15px 0 5px;">Thông tin người nhận</h3>
                        </div>
                        <div style="border: 1px solid black; padding: 5px; margin-bottom: 5px;">
                            <div>
                                <span>
                                    <b>Người nhận: </b>${order.orderDetail[0].personInfo.fullName}
                                </span>
                            </div>
                            <div>
                                <span>
                                    <b>Địa chỉ: </b>${order.orderDetail[0].address}
                                </span>
                            </div>
                            <div>
                                <span>
                                    <b>Số điện thoại: </b>${order.orderDetail[0].phone}
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    `;

            $('#orderDetailContainer').html(orderInfoHtml);
            $('#orderDetailPopup').show();
        }

        function generateArtworksRows(orderDetails) {
            return orderDetails.map(function (orderDetail) {
               return `
            <tr>
                <td>${orderDetail.artworkPId}</td>
                <td><img src="data:image/png;base64, ${orderDetail.pictureArtwork}" alt="Artwork Image" style="height: 100px; width: 100px;"></td>
                <td>${orderDetail.quanity}</td>
                <td>${formatPrice(orderDetail.priceOrder)}</td>
            </tr>
        `;
            }).join("");
        }

        $(document).on('click', '.close', function () {
            $('#orderDetailPopup').hide();
          
        });

        // Hàm định dạng ngày
        function formatDate(date) {
            var formattedDate = new Date(date);
            var day = formattedDate.getDate();
            var month = formattedDate.getMonth() + 1;
            var year = formattedDate.getFullYear();
            return `${day < 10 ? '0' + day : day}-${month < 10 ? '0' + month : month}-${year}`;
        }


        // Hàm định dạng giá
        function formatPrice(price) {
            var formattedPrice = price.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
            return formattedPrice;
        }
        function displayBase64Image(base64String, containerId) {
            // Tạo một phần tử hình ảnh và thêm vào container tương ứng
            var imageElement = `<img src="data:image/png;base64,${base64String}" alt="Artwork Image">`;
            $(containerId).html(imageElement);
        }
    </script>

    <style>
    </style>

    <div id="orderDetailPopup" class="modal show" style="width: 50%; height: 90%; margin: 50px auto; background-color: white;" tabindex="-1" role="dialog">
        <div class="popup-content-order">
            
            <div id="orderDetailContainer">
                <!-- Thông tin đơn hàng và sản phẩm sẽ được thêm vào đây -->
            </div>
        </div>
    </div>
    
    <script src="https://kit.fontawesome.com/6208ee92db.js" crossorigin="anonymous"></script>
    <script src="https://code.jquery.com/jquery-1.10.2.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.1.1/dist/js/bootstrap.bundle.min.js"></script>
    <script type="text/javascript"></script>
</body>

</html>